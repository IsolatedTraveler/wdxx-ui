@use 'sass:map';
@use './createMod.scss' as *;


%styleVal {
  width: 2px;
}

@mixin getStyle($data, $block) {
  $style : map.get($data, style);
  $child : map.get($data, child);

  @if $style {

    @each $key,
    $val in $style {
      #{$key}: #{$val};
    }
  }

  @if $child {
    @include async($child, $block);
  }
}

@mixin async($data, $block) {
  @if $data {
    @include asyncClass(map.get($data, class), $block, '');
    @include asyncClass(map.get($data, attr), $block, 'attr');
  }
}

@function getNames($names, $block, $lx, $add) {
  $nameVal: "";
  $val: "";

  @each $name in $names {
    $i: index($names, $name);

    @if $name ==def {
      @if $i ==1 {
        $nameVal: "&";
      }

      @else {
        $nameVal: $nameVal",&";
      }
    }

    @else {
      @if $i ==1 {
        @if $block =='' {
          $nameVal: $add+getClassName($name, $lx, '');
        }

        @else {
          $nameVal: $add+getClassName($block, $lx, $name);
        }
      }

      @else {
        @if $block =='' {
          $nameVal: $nameVal","$add+getClassName($name, $lx, '');
        }

        @else {
          $nameVal: $nameVal","$add+getClassName($block, $lx, $name);
        }

      }
    }
  }

  @return $nameVal;
}

@mixin asyncClass($data, $block, $lx) {

  @if $data {

    @each $name,
    $val in $data {
      @if $name {
        @if $val {

          @if & {
            #{getNames($name, $block, $lx, '&')} {
              @include getStyle($val, $block);
            }
          }

          @else {
            #{getNames($name,$block, $lx, '')} {
              @include getStyle($val, $block);
            }
          }
        }
      }
    }
  }
}

@mixin asyncMedia($data, $block) {

  @each $name,
  $val in $data {
    @if $name ==hover {
      @media (any-hover:hover) {
        @include async($data, $block)
      }
    }
  }
}