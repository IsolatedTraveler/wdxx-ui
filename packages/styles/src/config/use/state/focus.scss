@use '../var.scss' as *;
@use 'sass:map';
$focus-val: (
  primary: (
    def: var(--color-primary),
    focus: var(--color-primary-hover)
  ),
  success: (
    def: var(--color-success),
    focus: var(--color-success-hover)
  ),
  warning: (
    def: var(--color-warning),
    focus: var(--color-warning-hover)
  ),
  danger: (
    def: var(--color-danger),
    focus: var(--color-danger-hover)
  ),
  info: (
    def: var(--color-info),
    focus: var(--color-info-hover)
  ),
  'white': var(--color-white),
  'transparent': var(--color-transparent)
);
@function setFocuss($re: ()) {
  $re: setFocusStates($re);
  $re: map.set($re, 'def', setFocusAttrs((), 'def'));
  @return $re;
};
@function setFocusStates($re) {
  @each $key in $css-state-keys {
    $re: map.set($re, $key, setFocusAttrs((), $key));
  }
  @return $re;
};
@function setFocusAttrs($re, $state) {
  @each $key in $attr-keys {
    $re: map.set($re, $key, setFocus($state, $key));
  }
  $re: map.set($re, 'def', setFocus($state));
  @return $re;
};
@function setFocus($state, $attr:false) {
  $val: map.get($focus-val, $state);
  @if $attr and $val {
    $val: map.get($val, #{'_' + $attr});
  }
  @if $val {
    @return (
      def:(
        color: map.get($focus-val, 'white'),
        background-color: map.get($val, 'focus'),
        border-color:  map.get($val, 'focus')
      ),
      re:(
        color: map.get($focus-val, 'white'),
        background-color: map.get($val, 'def'),
        border-color:  map.get($val, 'def')
      ),
      text: (
        color: map.get($val, 'def'),
        background-color:map.get($focus-val, 'transparent'),
        border-color:  map.get($focus-val, 'transparent')
      )
    );
  }
  @return null;
};
$focus: setFocuss();