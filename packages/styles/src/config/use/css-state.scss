@use 'sass:map';
@use './attr/index.scss' as *;
@use './media/index.scss' as *;
@use './state/index.scss' as *;
@use './var.scss' as *;
$css-state: ();
$css-state--re: ();
$css-state--text: ();
$color-state: (
  'primary': var(--color-primary),
  'warning': var(--color-warning),
  'danger': var(--color-danger),
  'info': var(--color-info),
  'success': var(--color-success),
  'white': var(--color-white),
  'transparent': var(--color-transparent),
  'color': var(--color-text),
  'border': var(--color-border),
  ghost: (
    'primary': var(--color-primary-ghost),
    'warning': var(--color-warning-ghost),
    'danger': var(--color-danger-ghost),
    'info': var(--color-info-ghost),
    'success': var(--color-success-ghost)
  )
);
@each $key in $css-state-keys {
  @if $key != 'def' {
    $css-state: map.set($css-state, $key, (
      def: (
        'background-color': map.get($color-state, $key),
        'border-color': map.get($color-state, $key),
        'color': map.get($color-state, 'white')
      ),
      attr: setAttr($attr-keys, $key),
      media: setMedia($media-keys, $key),
      state: setState($state-keys, $key)
    ));
    $css-state--re: map.set($css-state--re, $key, (
      def: (
        'background-color': map.get($color-state, 'ghost', $key),
        'color': map.get($color-state, $key)
      ),
      attr: setAttr($attr-keys, $key, 're'),
      media: setMedia($media-keys, $key, 're'),
      state: setState($state-keys, $key, 're')
    ));
    $css-state--text: map.set($css-state--text, $key, (
      def: (
        'background-color': map.get($color-state, 'transparent'),
        'border-color': map.get($color-state, 'transparent'),
        'color': map.get($color-state, $key)
      ),
      attr: setAttr($attr-keys, $key, 'text'),
      media: setMedia($media-keys, $key, 'text'),
      state: setState($state-keys, $key, 'text')
    ));
  }
}