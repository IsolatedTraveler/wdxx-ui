@use 'sass:map';
@use './mixins/index.scss' as *;
@use './config/index.scss' as *;
$attr:('disabled');
$media: ('hover');
$state: ();
$btnMod: map.merge((
  mod: $css-state--text,
  'ghost': (
    def: (
      'background-color': var(--color-white)
    ),
    mod: $css-state--re,
    'attr': setAttr($attr, false, 're'),
    'state': setState($state, false, 're'),
    'media': setMedia($media, false, 're')
  ),
  'text': (
    'def': (
      'background-color': var(--color-transparent),
      'border-color': var(--color-transparent)
    ),
    mod: $css-state--text,
    'attr': setAttr($attr, 'def', 'text'),
    'state': setState($state, 'def', 'text'),
    'media': setMedia($media, 'def', 'text')
  )
),$radius);
$btn: (
  'mod': map.merge($css-state, $btnMod),
  'attr': setAttr($attr),
  'state': setState($state),
  'media': setMedia($media)
) !default;
@include styles(btn, $btn, $attr, $state, $media);
@include create(btn) {
  white-space: nowrap;
  text-align: center;
  box-sizing: border-box;
  transition: .1s;
  vertical-align: middle;
  line-height: 1;
  outline: none;
  cursor: pointer;
  user-select: none;
  border-radius: var(--width-radius);
  border: map.get($def, 'border');
  font-weight: map.get($def, 'font-weight');
  background-color: map.get($def, 'background-color');
  border-color: map.get($def, 'border-color');
  color: map.get($def, 'color');
  font-size: map.get($def, 'font-size');
  padding: map.get($def, 'padding');
  & + &{
    margin-left: var(--width-margin);
  }
}